<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyaxs.nyastore.mapper.InventoriesMapper">
  <resultMap id="BaseResultMap" type="com.nyaxs.nyastore.entity.Inventories">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="details" jdbcType="VARCHAR" property="details" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inventories
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nyaxs.nyastore.entity.Inventories">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into inventories (store_id, commodity_id, amount, 
      details)
    values (#{storeId,jdbcType=INTEGER}, #{commodityId,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, 
      #{details,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nyaxs.nyastore.entity.Inventories">
    update inventories
    set store_id = #{storeId,jdbcType=INTEGER},
      commodity_id = #{commodityId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      details = #{details,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, store_id, commodity_id, amount, details
    from inventories
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, store_id, commodity_id, amount, details
    from inventories
  </select>
</mapper>